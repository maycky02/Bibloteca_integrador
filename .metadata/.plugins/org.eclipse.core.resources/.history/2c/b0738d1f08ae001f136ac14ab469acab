package com.trilce.Bibloteca.servicios;

import java.time.LocalDate;

import org.springframework.stereotype.Service;

import com.trilce.Bibloteca.Entidades.Libro;
import com.trilce.Bibloteca.Entidades.Prestamo;
import com.trilce.Bibloteca.Entidades.Reserva;
import com.trilce.Bibloteca.repositorio.PrestamoRepository;
import com.trilce.Bibloteca.repositorio.ReservaRepository;

import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class ReservaService {

    private final ReservaRepository reservaRepository;
    private final PrestamoRepository prestamoRepository;
    private final LibroService libroService;

    @Transactional
    public void aprobarReserva(Long id) {
        Reserva reserva = reservaRepository.findById(id)
            .orElseThrow(() -> new IllegalArgumentException("Reserva no encontrada"));

        reserva.setEstado("Aprobada");
        reservaRepository.save(reserva);

        // Crear un nuevo préstamo
        Prestamo prestamo = new Prestamo();
        prestamo.setLibro(reserva.getLibro());
        prestamo.setUsuario(reserva.getUsuario());
        prestamo.setFechaPrestamo(LocalDate.now());
        prestamo.setFechaDevolucion(LocalDate.now().plusWeeks(2)); // Asumiendo una duración de 2 semanas

        prestamoRepository.save(prestamo);

        // Reducir el stock del libro
        Libro libro = reserva.getLibro();
        libro.setStock(libro.getStock() - 1);
        libroService.actualizarLibro(libro);
    }
}

