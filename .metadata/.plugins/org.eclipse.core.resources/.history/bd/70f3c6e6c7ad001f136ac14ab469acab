package com.trilce.Bibloteca.controladores;

import java.time.LocalDateTime;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.trilce.Bibloteca.Entidades.Reserva;
import com.trilce.Bibloteca.servicios.LibroService;
import com.trilce.Bibloteca.servicios.ReservaService;
import com.trilce.Bibloteca.servicios.UsuarioService; // UsuarioService

import lombok.RequiredArgsConstructor;

@Controller
@RequestMapping("/lector/reservas")
@RequiredArgsConstructor
public class ReservaController {
    private final ReservaService reservaService;
    private final LibroService libroService;
    private final UsuarioService usuarioService; // UsuarioService

    @GetMapping
    public String listarReservas(Model model, @RequestParam("usuarioId") Long usuarioId) {
        model.addAttribute("reservas", reservaService.listarReservasPorUsuario(usuarioId));  // Cambié a `Usuario`
        return "lector/lista-reservas";
    }

    @PostMapping("/crear")
    public String crearReserva(@RequestParam("libroId") Long libroId, @RequestParam("usuarioId") Long usuarioId) {
        libroService.buscarLibroPorId(libroId).ifPresent(libro -> {
            if (libro.getStock() > 0) {
                libro.setStock(libro.getStock() - 1);  // Reducir el stock
                Reserva reserva = new Reserva();
                reserva.setUsuario(usuarioService.buscarPorId(usuarioId));  // Establecer el usuario
                reserva.setLibro(libro);  // Establecer el libro
                reserva.setFechaReserva(LocalDateTime.now());  // Establecer la fecha de reserva
                reserva.setVencimientoReserva(LocalDateTime.now().plusDays(7));  // Establecer la fecha de vencimiento (por ejemplo, 7 días)
                reserva.setRecogido(false);  // Establecer el estado de recogido

                reservaService.crearReserva(reserva);  // Llamar al servicio para guardar la reserva
                libroService.actualizarLibro(libro);  // Actualizar el stock del libro
            }
        });
        return "redirect:/lector/catalogo";
    }

}
