package com.trilce.Bibloteca.servicios;

import java.time.LocalDate;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import com.trilce.Bibloteca.Entidades.Sancion;
import com.trilce.Bibloteca.Entidades.Usuario;
import com.trilce.Bibloteca.repositorio.SancionRepository;
import com.trilce.Bibloteca.repositorio.UsuarioRepository;

import jakarta.persistence.EntityNotFoundException;
import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class SancionService {

    private final SancionRepository sancionRepository;
    private final UsuarioRepository usuarioRepository;

    // Método para registrar una sanción
    public void registrarSancion(Sancion sancion) {
        sancionRepository.save(sancion);
    }

    public List<Sancion> listarSanciones() {
        return sancionRepository.findAll();
    }

    public void eliminarSancion(Long id) {
        sancionRepository.deleteById(id);
    }

    public boolean tieneSancionActiva(Long usuarioId) {
        List<Sancion> sanciones = sancionRepository.findByUsuarioId(usuarioId);
        return sanciones.stream()
                .anyMatch(sancion -> LocalDate.now().isBefore(sancion.getFechaFin()));
    }
    public Sancion buscarSancionPorId(Long sancionId) {
        return sancionRepository.findById(sancionId)
                .orElse(null);
    }
    
    public List<Sancion> listarSancionesActivas() {
        return sancionRepository.findAll().stream()
                .filter(sancion -> LocalDate.now().isBefore(sancion.getFechaFin()))
                .collect(Collectors.toList());
    }

    
    
}
