package com.trilce.Bibloteca.servicios;

import org.springframework.stereotype.Service;

import com.trilce.Bibloteca.Entidades.Usuario;
import com.trilce.Bibloteca.repositorio.UsuarioRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class UsuarioService {

    private final UsuarioRepository usuarioRepository;

    public boolean correoEsValido(String correo) {
        return correo.endsWith("@trilce.edu");
    }

    public boolean dniEsUnico(String dni) {
        return usuarioRepository.findByDni(dni).isEmpty();
    }

    public Usuario registrarUsuario(Usuario usuario) {
        if (!correoEsValido(usuario.getCorreo())) {
            throw new IllegalArgumentException("El correo no es institucional.");
        }
        if (!dniEsUnico(usuario.getDni())) {
            throw new IllegalArgumentException("El DNI ya est√° registrado.");
        }
        return usuarioRepository.save(usuario);
    }
}
