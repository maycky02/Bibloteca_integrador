package com.trilce.Bibloteca.Entidades;

import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.List;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import lombok.Data;

@Entity
@Data
public class Sancion {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @ManyToOne
    @JoinColumn(name = "usuario_id", nullable = false)
    private Usuario usuario;

    private String motivo;

    private LocalDate fechaInicio;

    private LocalDate fechaFin;
    private boolean activo = true;


    public long getDiasDeSancion() {
        return ChronoUnit.DAYS.between(fechaInicio, fechaFin);
    }
    
    public void verificarSanciones() {
        List<Sancion> sanciones = sancionRepository.findAll();

        for (Sancion sancion : sanciones) {
            if (LocalDate.now().isAfter(sancion.getFechaFin())) {
                sancion.setActivo(false); // Marcar como inactiva
                sancionRepository.save(sancion);
            }
        }
    }

}
