package com.trilce.Bibloteca.scheduler;

import java.time.LocalDateTime;
import java.util.List;

import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

import com.trilce.Bibloteca.Entidades.Prestamo;
import com.trilce.Bibloteca.servicios.PrestamoService;

import lombok.RequiredArgsConstructor;

@Component
@RequiredArgsConstructor
public class PrestamoScheduler {
    private final PrestamoService prestamoService;

    @Scheduled(cron = "0 0 0 * * *") // Ejecuta a medianoche
    public void verificarPrestamosVencidos() {
        List<Prestamo> vencidos = prestamoService.listarPrestamosVencidos();
        for (Prestamo prestamo : vencidos) {
            // Convertir LocalDate a LocalDateTime con hora 00:00:00
            if (prestamo.getFechaDevolucion().atStartOfDay().isBefore(LocalDateTime.now()) && !prestamo.isDevuelto()) {
                // Aquí se puede implementar lógica para registrar sanciones
            }
        }
    }
}
