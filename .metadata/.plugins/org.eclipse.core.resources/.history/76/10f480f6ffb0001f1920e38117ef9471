package com.trilce.Bibloteca.controladores;

import org.springframework.core.io.Resource;
import org.springframework.core.io.UrlResource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import java.nio.file.Path;
import java.nio.file.Paths;

@RestController
public class ImagenController {

    // Ruta a la carpeta de imágenes
    private static final Path RUTA_IMAGENES = Paths.get("src/main/resources/static/img_libros");

    @GetMapping("/img_libros/{imagen}")
    public ResponseEntity<Resource> verImagen(@PathVariable String imagen) {
        try {
            // Ruta completa del archivo
            Path archivoPath = RUTA_IMAGENES.resolve(imagen);
            Resource recurso = new UrlResource(archivoPath.toUri());

            if (recurso.exists()) {
                // Se retorna el archivo de la imagen con los headers correspondientes
                return ResponseEntity.ok()
                        .contentType(MediaType.IMAGE_JPEG) // O el tipo adecuado según el formato
                        .header(HttpHeaders.CONTENT_DISPOSITION, "inline; filename=\"" + recurso.getFilename() + "\"")
                        .body(recurso);
            } else {
                return ResponseEntity.notFound().build();
            }
        } catch (Exception e) {
            return ResponseEntity.internalServerError().build();
        }
    }
}
