package com.trilce.Bibloteca.controladores;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.trilce.Bibloteca.Entidades.Cliente;
import com.trilce.Bibloteca.servicios.ClienteService;


@Controller
@RequestMapping("/admin/clientes")
public class ClienteController {

    @Autowired
    private ClienteService clienteService;

    @GetMapping
    public String listarClientes(@RequestParam(required = false) String filtro, @RequestParam(required = false) String dni, Model model) {
        if (dni != null && !dni.isEmpty()) {
            model.addAttribute("clientes", clienteService.buscarPorDni(dni));  // Buscar por DNI
        } else if (filtro != null && !filtro.isEmpty()) {
            model.addAttribute("clientes", clienteService.buscarClientes(filtro));  // Buscar por nombre o correo
        } else {
            model.addAttribute("clientes", clienteService.listarClientes());  // Listar todos los clientes
        }
        return "admin/clientes";
    }

    @PostMapping
    public String guardarCliente(Cliente cliente) {
        clienteService.guardarCliente(cliente);
        return "redirect:/admin/clientes";
    }

    @GetMapping("/editar/{id}")
    public String editarCliente(@PathVariable Long id, Model model) {
        Cliente cliente = clienteService.obtenerClientePorId(id);
        model.addAttribute("cliente", cliente);
        return "admin/editarCliente";
    }

    @PostMapping("/editar/{id}")
    public String actualizarCliente(@PathVariable Long id, Cliente cliente) {
        cliente.setId(id);
        clienteService.guardarCliente(cliente);
        return "redirect:/admin/clientes";
    }

    @GetMapping("/eliminar/{id}")
    public String eliminarCliente(@PathVariable Long id) {
        clienteService.eliminarCliente(id);
        return "redirect:/admin/clientes";
    }

    @GetMapping("/sancionar/{id}")
    public String sancionarCliente(@PathVariable Long id) {
        clienteService.cambiarSancion(id, true);
        return "redirect:/admin/clientes";
    }

    @GetMapping("/levantar-sancion/{id}")
    public String levantarSancion(@PathVariable Long id) {
        clienteService.cambiarSancion(id, false);
        return "redirect:/admin/clientes";
    }
}